import "unknwn.idl";


enum ComLiveViewSource {
	lvsGDI = 0,
	lvsExternal = 1
} ;

enum ComEffectMode {
  cemUndefined = -1,
  cemDisabled = 0,
  cemStaticColor = 1,
  cemLivePicture = 2,
  cemColorChange = 3,
  cemLrColorChange = 4
};

[
	object,
	uuid(e01e2044-5afc-11d3-8e80-00805f91cdd9),
    helpstring("dieses interface steht immer zur Verfuegung solange AtmoWin laeuft"),
    oleautomation
]
interface IAtmoRemoteControl: IUnknown {
	[helpstring("Set Current Effect Mode")]
	HRESULT setEffect([in] enum ComEffectMode dwEffect, [out] enum ComEffectMode *dwOldEffect);

	[helpstring("Get Current Effect Mode")]
	HRESULT getEffect([in] enum ComEffectMode *dwEffect);

	[helpstring("set Static Color just for playing...")]
	HRESULT setStaticColor([in] BYTE red, [in] BYTE green, [in] BYTE blue);

	[helpstring("set Static Color just for one channel...")]
	HRESULT setChannelStaticColor([in] INT channel, [in] BYTE red, [in] BYTE green, [in] BYTE blue);

	[helpstring("set channel values (dmx)...")]
	HRESULT setChannelValues([in] SAFEARRAY(BYTE)channel_values);
}

[
	object,
	uuid(e01e2044-5bfc-11d4-8e80-00805f91cdd9),
    helpstring("Erweiterungsinterface..."),
    oleautomation
]
interface IAtmoRemoteControl2: IAtmoRemoteControl {
	[helpstring("Get Live View resolution")]
	HRESULT getLiveViewRes([out] int *Width, [out] int *Height);
}

[
	object,
	uuid(e01e2047-5afc-11d3-8e80-00805f91cdd9),
    helpstring("Steuerung des Live Modus nur wenn Modus=emLivePicture"),
    oleautomation
]
interface IAtmoLiveViewControl: IUnknown {
     [helpstring("Setzt den LiveViewModus auf GDI oder extern")]
 	 HRESULT setLiveViewSource([in] enum ComLiveViewSource dwModus);

     [helpstring("Liefert den aktuellen Live View Source")]
     HRESULT getCurrentLiveViewSource([out] enum ComLiveViewSource *modus);

  	 [helpstring("transfers new pixeldata as source for processing")]
     HRESULT setPixelData([in] SAFEARRAY(BYTE) bitmapInfoHeader,[in] SAFEARRAY(BYTE) pixelData);
}




[
	uuid(e01e2041-5afc-11d3-8e80-00805f91cdd9),
	helpstring("AtmoWin Remote Control Library."),
	version(1.0)
]
library AtmoWinRemoteControl
{
	importlib("stdole.tlb");

    interface IAtmoLiveViewControl;
    interface IAtmoRemoteControl;
    interface IAtmoRemoteControl2;

    [
		uuid(e01e2045-5afc-11d3-8e80-00805f91cee9),
		helpstring("AtmoRemoteControl Object.")
	]
	coclass AtmoRemoteControl
	{
		[default] interface IAtmoRemoteControl;
        interface IAtmoRemoteControl2;
	}

    [
		uuid(e01e2044-5afc-11d3-8e80-00805f91cee9),
		helpstring("AtmoLiveViewControl Object.")
	]
	coclass AtmoLiveViewControl
	{
		[default] interface IAtmoLiveViewControl;
	}

}